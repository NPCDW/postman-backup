name: Build

on:
  push:
    tags: "*"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [macos, windows]
        include:
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            archive-name: postman-backup-macos.tar.gz
          - build: windows
            os: windows-latest
            rust: stable-x86_64-msvc
            target: x86_64-pc-windows-msvc
            archive-name: postman-backup-windows.7z
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    - name: Build
      run: cargo build --verbose --release --target ${{ matrix.target }}
      env:
        RUST_BACKTRACE: 1
    - name: Strip binary (linux and macos)
      if: matrix.build == 'macos'
      run: strip "target/${{ matrix.target }}/release/postman-backup"
    - name: Build archive
      shell: bash
      run: |
        mkdir archive
        cp LICENSE README.md archive/
        cd archive
        if [ "${{ matrix.build }}" = "windows" ]; then
          cp "../target/${{ matrix.target }}/release/postman-backup.exe" ./
          7z a "${{ matrix.archive-name }}" LICENSE README.md postman-backup.exe
        else
          cp "../target/${{ matrix.target }}/release/postman-backup" ./
          tar -czf "${{ matrix.archive-name }}" LICENSE README.md postman-backup
        fi
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: archive/${{ matrix.archive-name }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            npcdw/postman-backup:${{ github.ref_name }}
            npcdw/postman-backup:latest